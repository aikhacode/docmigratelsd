"use strict";(self.webpackChunkdocmigrate=self.webpackChunkdocmigrate||[]).push([[454],{1101:function(a,n,e){e.r(n),e.d(n,{frontMatter:function(){return o},contentTitle:function(){return d},metadata:function(){return u},toc:function(){return c},default:function(){return p}});var t=e(7462),i=e(3366),r=(e(7294),e(3905)),s=["components"],o={sidebar_position:2},d="Background Process",u={unversionedId:"tutorial-extras/background-proc",id:"tutorial-extras/background-proc",isDocsHomePage:!1,title:"Background Process",description:"Untuk mensimulasikan background process migrasi di dalam plugin wordpress, salah satu metode yang bisa digunakan adalah menggunakan metode admin-ajax.php yang telah disediakan di halaman admin wordpress. Dimana dalam ajax call bersifat async sehingga bisa dimanfaatkan untuk simulasi background process.",source:"@site/docs/tutorial-extras/background-proc.md",sourceDirName:"tutorial-extras",slug:"/tutorial-extras/background-proc",permalink:"/docmigratelsd/tutorial-extras/background-proc",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Migration dan Impor/Ekspor",permalink:"/docmigratelsd/tutorial-extras/migration"}},c=[{value:"JQUERY Ajax",id:"jquery-ajax",children:[],level:2},{value:"Definisikan admin-ajax.php Function",id:"definisikan-admin-ajaxphp-function",children:[],level:2}],l={toc:c};function p(a){var n=a.components,e=(0,i.Z)(a,s);return(0,r.kt)("wrapper",(0,t.Z)({},l,e,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"background-process"},"Background Process"),(0,r.kt)("p",null,"Untuk mensimulasikan background process migrasi di dalam plugin wordpress, salah satu metode yang bisa digunakan adalah menggunakan metode admin-ajax.php yang telah disediakan di halaman admin wordpress. Dimana dalam ajax call bersifat async sehingga bisa dimanfaatkan untuk simulasi background process."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:'title="Init action dalam plugin"',title:'"Init',action:!0,dalam:!0,'plugin"':!0},"<?php\n   add_action('wp_ajax_my_action', 'my_action');\n   add_action('wp_ajax_nopriv_my_action', 'my_action');\n\n   function my_action(){\n       ...\n   }\n")),(0,r.kt)("h2",{id:"jquery-ajax"},"JQUERY Ajax"),(0,r.kt)("p",null,"Untuk pemanggilan async ajax kita manfaatkan library jquery yang telah disediakan/diload secara default di wordpress "),(0,r.kt)("p",null,"contoh:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"...\n    jQuery.ajax({\n            url: ajaxurl,\n            dataType: 'json',\n            type: 'POST',\n            data: {\n                action: 'my_action',\n                atype: 'get_arr_titles',\n                fname: curr_table_name\n            }\n        })\n...\n")),(0,r.kt)("h2",{id:"definisikan-admin-ajaxphp-function"},"Definisikan admin-ajax.php Function"),(0,r.kt)("p",null,"supaya admin-ajax dapat berkomunikasi dengan plugin maka definisikan kebutuhan function yang diperlukan. Contoh:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"...\nfunction my_action()\n    {\n        if (isset($_GET['atype'])) $atype = $_GET['atype'];\n        elseif (isset($_POST['atype']))  $atype = $_POST['atype'];\n\n        $response = array();\n        switch ($atype) {\n\n            case 'get_data':\n              $response = $this->get_data();\n            break;\n            ... // method lain yang diperlukan \n            \n        }\n\n        header('Content-Type: application/json');\n        echo json_encode($response);\n        exit();\n    }\n...\n")))}p.isMDXComponent=!0}}]);